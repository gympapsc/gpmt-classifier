on: [release]

name: Deployment to Azure Kubernetes Service

env:
  CLUSTER_NAME: GPMTCluster
  RESOURCE_GROUP: GPMTResourceGroup
  REGISTRY_SECRET_NAME: registry-token

jobs:

  test:
    name: Test container
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: ACR login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_USERNAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Test `gpmt-net`
      run: docker-compose -f docker-compose.yml up --exit-code-from gpmt-net
    
    - uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: /coverage

  build:
    name: Build and push container to ACR
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2

    - name: ACR login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_USERNAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Build `gpmt-net` container
      run: docker build ./ -t ${{ secrets.REGISTRY_USERNAME }}.azurecr.io/gpmt-net:${{ github.event.release.tag_name }}
    
    - name: Push `gpmt-net` container
      run: docker push ${{ secrets.REGISTRY_USERNAME}}.azurecr.io/gpmt-net:${{ github.event.release.tag_name }}

  deployment:
    name: "Deploy to AKS"
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    
    - name: Set AKS cluster
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.RESOURCE_GROUP }}
      
    - name: Create k8s registry secret
      uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_USERNAME }}.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.REGISTRY_SECRET_NAME }}
        namespace: "default"

    - name: Create k8s cosmos secret
      uses: azure/k8s-create-secret@v1
      with:
        secret-type: 'generic'
        arguments:  --from-literal=url=${{ secrets.COSMOS_URL }}
        secret-name: cosmosdb
        namespace: "default"
    
    - name: Create k8s azure storage secret
      uses: azure/k8s-create-secret@v1
      with:
        secret-type: 'generic'
        arguments:  --from-literal=url=${{ secrets.STORAGE_CONNECTION_URL }}
        secret-name: azure-storage
        namespace: "default"
        
    - name: Deploy analysis service
      uses: azure/k8s-deploy@v1
      with:
        manifests: |
            manifest/deployments.yaml
            manifest/services.yaml
        imagepullsecrets: |
            ${{ env.REGISTRY_SECRET_NAME }}
        images: |
           ${{ secrets.REGISTRY_USERNAME }}.azurecr.io/gpmt-net:${{ github.event.release.tag_name }}
        namespace: "default"
